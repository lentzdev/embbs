     Volume 1, Number 23                              11 December 1989
     =================================================================
      ********   ***        ***  *******     ********       *********
     **********  ****      ****  ********    *********     ***********
     **      **  ** **    ** **  **    ***   **     ***   ***       **
     **          **  **  **  **  **    ***   **     ***   ***
     ******      **   ****   **  ********    *********     *********
     ******      **    **    **  *********   **********     *********
     **          **          **  **     ***  **      ***           ***
     **      **  **          **  **     ***  **      ***   **      ***
     **********  **          **  *********   **********    ***********
      ********   **          **  ********    *********      *********
     EUROPEAN     MAGAZINE     FOR      BULLETIN     BOARD     SYSTEMS
     =================================================================
     Editor in Chief                                         Art v1.10 
     Technical Coordination                                Arjen Lentz
     Regular Contributors                             Gerhard Hoogterp
                                                       Amos Wittenberg
                                                       Jeroen van Drie
     
     EMBBS   COPYRIGHT (C) 1989 by Arjen G. Lentz; ALL RIGHTS RESERVED
     An electronic magazine,  by and for BBS users,  published weekly.
     May  be  distributed  and/or duplicated freely for non-commercial
     use and via Bulletin Board Systems only.   For other uses, please
     contact:   Arjen G. Lentz,  Langegracht 7B,  3811 BT  Amersfoort,
     The Netherlands.    AINEX-RBBS ++31-33-633916 (FidoNet 2:286/201)
     
     Article  submissions  will  be greatly appreciated, and should be
     mailed  or  uploaded  to  one  of the distribution/support sites.
     More submission information can be found in the NOTICES section.
     
     The   contents   of  the  articles  included  here  are  not  our
     responsibility,  nor  do  we necessarily agree with them. We will
     publish   ANYTHING  which  is  properly  attributed  and  legally
     acceptable.


                             Table of Contents

     1. ARTICLES  .................................................. 1
        Advanced TurboPascal - Part IV (Timing)  ................... 1
     2. NOTICES  ................................................... 5
        Calendar of Events  ........................................ 5
        EMBBS Distribution & Support Sites  ........................ 6

                                 - - - - -
     EMBBS 1-23                   Page 1                   11 Dec 1989


     =================================================================
                                 ARTICLES
     =================================================================


     Advanced TurboPascal - Part IV (Timing)
     By Gerhard Hoogterp
     FidoNet 2:286/201.6
     
     This  week's  subject  is  timing.  It's one of those things that
     occur  rather  often in programs. For example while waiting for a
     keypress in a BBS door program, or in games..
     
     Timing  has  one  big pitfall, one has to check on the break of a
     day.  As  I  used  the  amount  of  tenths of seconds in a day in
     combination  with  the  Turbo  Pascal GetTime function one has to
     remember  that a timeout of 10 minutes which starts at 23:55 hour
     has  to  finish at 00:05 hour and not at 24:05 hour.. in the last
     case  the  program would wait forever.. To avoid this I've used a
     record structure to keep the time at which an event times out. It
     looks like :
     
       ClockRec = Record
                   Time  : Longint;
                   Day   : Boolean;
                  End;
     
     The  DAY  boolean  keeps  track  of the day break. When ever it's
     true, the amount of tenth of seconds in a day will be incremented
     to  the current time. An other pitfall is the WORD type variables
     which  are  returned  by  the GetTime procedure. These have to be
     multiplied  by  the  amount  of  tenths  of seconds in each item.
     Hereby the size of the number gets to big for a WORD and overflow
     occurs.  The magic word here is Typecasting. With Typecasting the
     result of the multiply as a LongInt overflow can be avoided.
     
     Well,  as  I  wrote  these  procedures for a little communication
     package  I  once  wrote there are two other procedures thrown in.
     One  for  displaying  the difference between the current time and
     the  final  timeout  time  (CountDown) and one for displaying the
     opposite. (WriteTime)
     
     So far for this week,
      Greetings, Gerhard.
     
     {******************************************************
      *
      * Timer procedures and functions.
      *
      * By Gerhard Hoogterp
      * Fidonet 2:286/201.6
      * BitNet  Hoogterpg@Henut5
      *
      *******************************}
     Unit Clock;
     Interface
     EMBBS 1-23                   Page 2                   11 Dec 1989


     Uses Dos;
     
     Type ClockRec = Record
                       Time  : LongInt;
                       Day   : Boolean;
                     End;
          Str8     = String[8];
     
     {*******************
      *
      * Set a clock Variable to a certain amount of time.
      *
      * The Time is given in tenths of a second.
      *
      ********}
     
     Procedure TimerSet(Tenths : Word ; Var Time : ClockRec);
     
     {*******************
      *
      * Checks if the time of a Clock variable is over
      *
      ********}
     
     Function  TimeUp(Time : ClockRec):Boolean;
     
     {*******************
      *
      * Subtracts the current time of the time in the clockrec and
      * converts the result to a formatted string. (HH:MM:SS)
      *
      ********}
     
     Function  CountDown(Time : ClockRec):Str8;
     
     {*******************
      *
      * Subtracts the time in the clockrec of the current time and
      * converts the result to a formatted string. (HH:MM:SS)
      *
      ********}
     
     Function  WriteTime(Time : ClockRec):Str8;
     
     
     Implementation
     
     Procedure TimerSet(Tenths : Word ; Var Time : ClockRec);
     Var H,M,S,T100,D,Dum1,Dum2,Dum3 : Word;
     Var Timer : LongInt;
     Begin
     GetTime(H,M,S,T100);
     Timer:=  ( LongInt(H)*360000)+
              ( LongInt(M)*6000)  +
              ( LongInt(S)*100)   +
                LongInt(T100)       ;
     EMBBS 1-23                   Page 3                   11 Dec 1989


     Time.Time:=(Timer Div 10)+Tenths;
     Time.Day:=(Time.Time >= 8640000);
     End;
     
     Function TimeUp(Time : ClockRec):Boolean;
     Var HTime : ClockRec;
     Begin
     TimerSet(0,HTime);
     If Time.Day
        Then Inc(HTime.Time,8640000);
     TimeUp:=(HTime.Time>=Time.Time);
     End;
     
     Function WriteTime(Time : ClockRec): Str8;
     Var HTime : ClockRec;
         WTime : LongInt;
         HPart : Word;
         HStr  : Str8;
         RStr  : Str8;
         Step  : Byte;
     
     Begin
     TimerSet(0,Htime);
     WTime:=(HTime.Time-Time.Time) Div 10;
     
     HPart:=Wtime Div 3600;
     Str(HPart:2,HStr);
     RStr:=Hstr+':';
     Wtime:=WTime Mod 3600;
     
     HPart:=Wtime Div 60;
     Str(HPart:2,HStr);
     RStr:=Rstr+HStr+':';
     HPart:=Wtime Mod 60;
     
     Str(Hpart:2,HStr);
     RStr:=RStr+Hstr;
     For Step:=1 To Length(RStr) Do
     If RStr[Step]=' '
        Then RStr[Step]:='0';
     WriteTime:=RStr;
     End;
     
     Function CountDown(Time : ClockRec):Str8;
     Var HTime : ClockRec;
         WTime : LongInt;
         HPart : Word;
         HStr  : Str8;
         RStr  : Str8;
         Step  : Byte;
     
     Begin
     TimerSet(0,HTime);
     WTime:=(Time.Time-HTime.Time) Div 10;
     HPart:=Wtime Div 3600;
     Str(HPart:2,HStr);
     EMBBS 1-23                   Page 4                   11 Dec 1989


     RStr:=Hstr+':';
     Wtime:=WTime Mod 3600;
     
     HPart:=Wtime Div 60;
     Str(HPart:2,HStr);
     RStr:=Rstr+HStr+':';
     HPart:=Wtime Mod 60;
     
     Str(Hpart:2,HStr);
     RStr:=RStr+Hstr;
     For Step:=1 To Length(RStr) Do
     If RStr[Step]=' '
        Then RStr[Step]:='0';
     CountDown:=RStr;
     End;
     End.

     -----------------------------------------------------------------
     EMBBS 1-23                   Page 5                   11 Dec 1989


     =================================================================
                                  NOTICES
     =================================================================


                            Calendar of Events
     
     
     ?? ??? 1990 - ?? ??? 1990
        EuroCon IV in Antwerp, Belgium: annual European FidoNet
        Conference. Not only for sysops, mind you!  Also for points,
        users and everyone else interested in FidoNet communications..
     
      1 Jan 1993
        The European Community opens up its internal borders.
     
     If  you  have  something  you would like to see on this calendar,
     please send a note to the editorial headquarters @ 2:286/201.

     -----------------------------------------------------------------
     EMBBS 1-23                   Page 6                   11 Dec 1989


                    EMBBS Distribution & Support Sites
     
     
     The  following systems offer a variety of services to the readers
     in their country (BBS as well as users):
     * Forwarding any submission/comment/puzzle msgs or files for you!
     * Having new EMBBS issues available a few hours after release.
     * Keeping available some or all previous issues of EMBBS.
     * Linking the EMBBS EchoMail Conference to anyone interested.
     Note:  Please do not request during the Z2MH: 02:30 - 03:30 GMT.
     
        Austria:  (FidoNet Region 2:31)
        -  Deep Node, Vienna; sysop Felix Kasza
           ++43-222-804244169 at 1200, 2400 and HST 14K4, with MNP5
           FidoNet Node 2:310/11 (Continuous mail)
     
        Belgium:  (FidoNet Region 2:29)
        -  TRIPOD BBS, Maasmechelen; sysop Johan Zwiekhorst
           ++32-11-762626 at 300, 1200/75, 1200 and 2400
           Fidonet Node 2:292/100 (Continuous mail)
     
        Denmark:  (FidoNet Region 2:23)
        -  The Polar Link HST, Billund; sysop Christian Sorensen
           ++45-75-885596 at 1200, 2400, HST 14K4 and V.32, with MNP5
           Fidonet Node: 2:230/102 (Continuous mail / No BBS)
     
        Finland:  (FidoNet Region 2:22)
        -  Zone 2 Coordinator System; Z2C Ron Dwight
           ++358-0-4523389 at 1200, 2400 and PEP, with MNP3
           Fidonet Node 2:2/0 (Continuous mail)
        -  Micro Maniacs; sysop Ron Dwight
           ++358-0-425966 at 1200, 2400, HST 14K4 and V.32, with MNP5
           FidoNet Node 2:515/1 (Continuous mail)
     
        Great Britain:  (FidoNet Region 2:25)
        -  KESHER BBS, Londen; sysop Amos Wittenberg
           ++44-1-458-0521 at 1200 and 2400
           FidoNet Node 2:253/178 (Continous mail)
        -  The London Mail Centre, Londen; sysop Mike Simkins
           ++44-1-534-1200 at 1200, 2400 and HST, with MNP5
           FidoNet Node 2:254/1 (Continuous mail)
     
        Holland:  (FidoNet Region 2:28)
        -  AINEX-RBBS (EMBBS HQ), Amersfoort; sysop Arjen Lentz
           ++31-33-633916 at 1200, 2400, and HST, with MNP5
           FidoNet Node 2:286/201 aka 2:2/102 (Continuous mail)
     
        Republic of South Africa:  (FidoNet Region 5:49)
        -  Capricorn Too FIDO, Hout Bay; sysop Ralph Colyn
           ++27-21-790-4551 at 2400
           FidoNet Node 5:492/3 (Continuous mail)
     
        Sweden:   (FidoNet Region 2:20)
        -  Pallas BBS, Lund;  sysop Ulf Nilsson
           ++46-46-304878 at 1200, 2400, HST 14K4 and V.32, with MNP5
           FidoNet Node 2:200/112 (Continuous mail)
     EMBBS 1-23                   Page 7                   11 Dec 1989


     If  you  would  like to become a distribution system for EMBBS in
     your region (country), please contact Arjen Lentz at FidoNet Node
     2:286/201  for  more  information.  More sites in one country are
     possible, though not necessary at this moment.

     -----------------------------------------------------------------
